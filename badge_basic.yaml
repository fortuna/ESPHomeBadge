# Copyright 2025 Vinicius Fortuna
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This file defines the hardware of the badge. All functionality
# should be in your deployment or application configuration that
# depends on this file.

# Note on RMT symbols:
# ESP32-C3 has memory for only 192 RMT symbols, only half of which is available to transmitters.
# We have the following defaults:
# - esp32_rmt_led_strip: 96
# - remote_transmitter: 48
# - remote_receiver: 192
# We change it to the following allocation:
# - esp32_rmt_led_strip: 48
# - remote_transmitter: 48
# - remote_receiver: 86

esphome:
  includes:
    # Special code to make the vibration code work.
    - vibration.h
  on_boot: 
    - then:
        # Need to explicitly set up the vibration GPIO pin.
        - lambda: badge::setup_vibration_motor();

esp32:
  board: esp32-c3-devkitm-1
  variant: esp32c3
  framework:
    type: esp-idf

i2c:
  sda: GPIO21
  scl: GPIO20
  id: badge_i2c

# INPUTS

binary_sensor:
  # Buttons 1 and 2 conflict with USB, which requires special handling to flash.
  # See the README.
  - id: button_1
    platform: gpio
    name: Button 1 (SW3)
    pin:
      number: GPIO19  # USB_D+
      inverted: true
      mode:
        input: true
        pullup: true

  - id: button_2
    platform: gpio
    name: Button 2 (SW4)
    pin:
      number: GPIO18  # USB_D-
      inverted: true
      mode:
        input: true
        pullup: true

  - id: button_3
    platform: gpio
    name: Button 3 (SW1)
    pin:
      number: GPIO10
      inverted: true
      mode:
        input: true
        pullup: true

  - id: button_4
    platform: gpio
    name: Button 4 (SW2)
    pin:
      number: GPIO09  # Strapping Pin (BOOT)
      inverted: true
      mode:
        input: true
        pullup: true

remote_receiver:
  - id: ir_receiver
    pin:
      number: GPIO03
      inverted: true
      mode:
        input: true
        pullup: true
    rmt_symbols: 86


# OUTPUTS

light:
  - id: led_strip
    name: LED Strip
    # restore_mode: RESTORE_DEFAULT_ON
    platform: esp32_rmt_led_strip
    rgb_order: GRB
    pin: GPIO8  # Strapping Pin
    num_leds: 16
    chipset: ws2812
    rmt_symbols: 48

remote_transmitter:
  - id: ir_transmitter
    pin: GPIO02
    # Infrared remotes use a 50% carrier signal.
    carrier_duty_percent: 50%
    rmt_symbols: 48

switch:
  - platform: template
    id: vibration_motor
    name: Vibration Motor
    restore_mode: ALWAYS_OFF
    turn_on_action:
      - lambda: |-
          ESP_LOGD("vibration", "turning vibration on");
          gpio_set_level(badge::VIBRATION_GPIO, 1);
          id(vibration_motor).publish_state(true);
    turn_off_action:
      - lambda: |-
          ESP_LOGD("vibration", "turning vibration off");
          gpio_set_level(badge::VIBRATION_GPIO, 0);
          id(vibration_motor).publish_state(false);

