# Copyright 2025 Vinicius Fortuna
# SPDX-License-Identifier: Apache-2.0

name: Run Tests

on:
  push:
    branches: [main]
    paths:
      # Move path check to job. Use GITHUB_OUTPUT and dynamic matrix:
      # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/workflow-commands-for-github-actions#setting-an-output-parameter
      # https://github.blog/changelog/2020-04-15-github-actions-new-workflow-features/#new-fromjson-method-in-expressions
      # https://stackoverflow.com/questions/65056670/is-it-possible-to-have-a-dynamic-strategy-matrix-in-a-workflow-in-github-actions
      - '**.yaml'
  pull_request:
    branches: [main]
    paths:
      - '**.yaml'

jobs:
  compile-demos:
    name: Compile Demos
    runs-on: ubuntu-latest
    # TODO:
    # if: ...there are changes...

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Lint YAML
        shell: bash
        # For development, you can use `pipx run yamllint`.
        run: yamllint **/*.yaml

      - name: Install ESPHome
        run: pip install esphome

      - name: Compile Firmwares
        env:
          PLATFORMIO_BUILD_CACHE_DIR: /tmp/esphome
        shell: bash
        # TODO: Need to install SDL on Linux for Host platform:
        # sudo apt update && sudo apt install -y libsdl2-dev libsodium-dev build-essential
        run: |
          echo "wifi_ssid: example_ssid" > secrets.yaml
          echo "wifi_password: example_password" >> secrets.yaml
          echo "ap_password: example_password" > secrets.yaml
          echo "ota_password: example_password" >> secrets.yaml
          for config in firmware_display/main_dev.yaml firmware_nodisplay/main_dev.yaml; do
            esphome compile "$config" || {
              echo "ERROR: Compilation failed for $config"
              exit 1
            }
          done
          echo "All found ESPHome demos compiled successfully."
